// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tilePath8], TileScale.Sixteen);
            case "level7":
            case "level7":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 . . . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
2 2 2 2 . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0,sprites.dungeon.floorLight1], TileScale.Sixteen);
            case "letvel8 -":
            case "level8":return tiles.createTilemap(hex`1c001c`, img`
222222222222.22222.222222222
.........222.22222.2222..2..
22222.22.222.......2222.22.2
22222.22.222.222222222...2.2
22222.22.222.222222222.222.2
.........222...............2
222.2222.222.22.22.2222.22.2
222.2222......2.22..22..22.2
222.2222.2222.2.222222.222.2
22.......2222.2.222222.222.2
22.2222222222...........22.2
22.2222222222.222222222....2
..............222.......2222
.222.2222.222.222.2.222.2222
.222.2222.222.....2.....22..
.....2222.222.222.2.22.222.2
2.22.2222.222.222...22.222.2
2.22.2222.222.222.2222.22...
..22.2222.222.222.2222.22.22
2222................22.22.22
2.22.22222.22222222222.22.22
2..........222222......22.22
22222.2222.222222.22.2.22...
2.....22..........22.2.222.2
2.222.22222222222.22.2.222.2
22222.22222.22222.22.2.....2
22....22222.......22.2.222..
22.22.22222.222.222..2.222.2
`, [myTiles.transparency16,sprites.dungeon.floorLight2,sprites.dungeon.floorDark2,sprites.dungeon.floorLight1], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile1":return tile1;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
